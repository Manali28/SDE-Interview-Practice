// T:O(n), S:O(n)

class Solution {
    public int subarraySum(int[] nums, int k) {
        
        if(nums == null || nums.length < 1) return 0;
        
        int prefixSum = 0, result = 0;
        HashMap<Integer,Integer> map = new HashMap<>();
        map.put(0,1);
        
        for(int i = 0; i < nums.length; i++){
            prefixSum += nums[i];
            result += map.getOrDefault(prefixSum - k,0);
            map.put(prefixSum,map.getOrDefault(prefixSum,0)+1);
        }
        return result;
    }
}