// T : O(logn) ; S: O(1)

class Solution {
    public boolean isMajorityElement(int[] nums, int target) {
        
        if(nums == null || nums.length == 0) return false;
        
        int firstOccur = firstOccurence(nums,target);
        int lastOccur = firstOccur + nums.length/2;
        
        if(lastOccur < nums.length && nums[lastOccur] == target){
            return true;
        }
        return false;
    }
    	
    public int firstOccurence(int[] nums, int target){
        int left = 0;
        int right = nums.length;
        
        while(left < right){
            int mid = left + (right - left)/2;
            if(nums[mid] < target){
                left = mid + 1;			//had difficulty here
            }else if(nums[mid] >= target){
                right = mid;
            }
        }
        return left;
    }
        
}