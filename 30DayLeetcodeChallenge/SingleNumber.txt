/*
Given a non-empty array of integers, every element appears twice except for one. Find that single one.

Note:

Your algorithm should have a linear runtime complexity. Could you implement it without using extra memory?

Example 1:

Input: [2,2,1]
Output: 1
Example 2:

Input: [4,1,2,1,2]
Output: 4
*/

class Solution {
    public int singleNumber(int[] nums) {
        
        if(nums == null || nums.length < 1)return 0;
        
        if(nums.length == 1) return nums[0];
        
        HashSet<Integer> set = new HashSet<>();
        
        for(int num : nums){
            if(set.contains(num)){
                set.remove(num);
            }else{
                set.add(num);
            }
        }
        
        Integer value = 0;
        
        if(set.size() == 1){
            value = set.toArray(new Integer[1])[0];
        }
        
        return value;
        
    }
}