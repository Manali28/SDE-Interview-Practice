/*
For question please refer https://leetcode.com/problems/check-if-it-is-a-straight-line/


This is based on pure maths logic. I initially used a logic which did not work for few cases. Then looked up for ideas. This post came handy : https://leetcode.com/problems/check-if-it-is-a-straight-line/discuss/408984/JavaPython-3-check-slopes-short-code-w-explanation-and-analysis.

*/

class Solution {
    public boolean checkStraightLine(int[][] coordinates) {
        if(coordinates == null || coordinates.length <= 2) return true;
        
        int x0 = coordinates[0][0], y0 = coordinates[0][1],
            x1 = coordinates[1][0], y1 = coordinates[1][1];
        
        int dx = (x1 - x0), dy = (y1 - y0);
        
        for(int i = 2; i < coordinates.length; i++){
            int x = coordinates[i][0], y = coordinates[i][1];
            if(dx * (y - y1) != dy * (x - x1)){
                return false;
            }
        }
        return true;
    }
}